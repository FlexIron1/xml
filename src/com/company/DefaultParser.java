package com.company;import org.w3c.dom.Document;import org.w3c.dom.Node;import org.w3c.dom.NodeList;import org.xml.sax.SAXException;import javax.xml.XMLConstants;import javax.xml.namespace.NamespaceContext;import javax.xml.parsers.DocumentBuilder;import javax.xml.parsers.DocumentBuilderFactory;import javax.xml.parsers.ParserConfigurationException;import javax.xml.xpath.*;import java.io.File;import java.io.FileInputStream;import java.io.IOException;import java.util.Iterator;public class DefaultParser {    private File file;    public File getFile() {        return file;    }    public void setFile(File file) {        this.file = file;    }    public DefaultParser(File file) {        this.file = file;    }    public void xPatch() throws IOException, ParserConfigurationException, SAXException, XPathExpressionException {        FileInputStream fileIS = new FileInputStream(this.getFile());        DocumentBuilderFactory builderFactory = DocumentBuilderFactory.newInstance();        DocumentBuilder builder = builderFactory.newDocumentBuilder();        Document xmlDocument = builder.parse(fileIS);        builderFactory.setNamespaceAware(true);        XPath xPath = XPathFactory.newInstance().newXPath();        xPath.setNamespaceContext(new NamespaceContext() {            @Override            public String getNamespaceURI(String prefix) {                if ("cr".equals(prefix)) {                    return "http://www.example.com/";                }                else if ("xs".equals(prefix))                    return "http://www.example.com/1";//                 else if ("bonus".equals(prefix)) {//                    return "http://www.w3.org/2001/XMLSchema-instance";//                }                return null;            }            @Override            public String getPrefix(String namespaceURI) {                return null;            }            @Override            public Iterator getPrefixes(String namespaceURI) {                return null;            }        });        XPathExpression ex=xPath.compile("//cr:shop/cr:books/cr:book");        Node result = (Node) ex.evaluate(xmlDocument,XPathConstants.NODE);        System.out.println(result);    }}